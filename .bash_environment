#!/bin/bash

# -----------------------------------------------------------------------------
# User specific environment, updating PATH, INCLUDE and LIBRARY paths
# -----------------------------------------------------------------------------

CUDA="/usr/local/cuda"
GCCL="$HOME/gcc"

PRG="$HOME/usr"
PYTHON="$PRG/local/python"
BIN="$GCCL/bin:$PRG/bin:$CUDA/bin:$PRG/bin/texbin:$HOME/texlive/bin/i386-linux:$PYTHON/bin"
INC="$GCCL/include:$PRG/include:$PRG/include/ncurses:$CUDA/include:/usr/include"
LIB="$GCCL/lib:$GCCL/lib64:$PRG/lib:$PRG/lib64:$CUDA/lib:$CUDA/lib64:/lib64:/usr/lib"

BINS=(PATH)
INCS=(C_INCLUDE_PATH CPLUS_INCLUDE_PATH INCLUDE)
LIBS=(LD_LIBRARY_PATH LD_RUN_PATH LIBRARY_PATH)
ALL=(BIN INC LIB)

for (( a=0; a < ${#ALL[@]}; a++)); do
    eval "
        for (( i=0; i < \${#${ALL[$a]}"S"[@]}; i++ )); do
            if [ \"\$(eval \"echo \\\$\${${ALL[$a]}"S"[\$i]}\" | grep \"\$${ALL[$a]}\")\" == \"\" ]; then
                if [ \"\$(eval \"echo \\\$\${${ALL[$a]}"S"[\$i]}\")\" == \"\" ]; then
                    eval \"export \${${ALL[$a]}"S"[\$i]}=\"\$${ALL[$a]}\"\";
                else
                    eval \"export \${${ALL[$a]}"S"[\$i]}=\"\$${ALL[$a]}:\\\$\${${ALL[$a]}"S"[\$i]}\"\";
                fi;
            fi;
        done;"
done

# -----------------------------------------------------------------------------
# Update program environment
# -----------------------------------------------------------------------------

# setup git user
printf "[user]\n    name = $USER@$HOSTNAME\n    email = $USER@cs.ru.nl\n" > $HOME/.gituser

#export CDPATH=".:$HOME"                 # homedir available from everywhere
export CVSROOT="$HOME/trunk/cvs"
export CVSEDITOR="vim"
mkdir -p "$CVSROOT/CVSROOT"
export PYTHONPATH="$PRG/local/python/lib/python3.4/site-packages/"
mkdir -p $PYTHONPATH

export PKG_CONFIG_PATH="$PRG/lib/pkgconfig"
export VALGRIND_LIB="$PRG/lib/valgrind"
export EDITOR="vim"
export VISUAL="vim"
export XZ_OPT="-9"                      # best compression for tar.xz creation
export LC_ALL="en_US.UTF-8"             # use UTF-8 character set
export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"
export CLICOLOR=1                       # use colors (if possible)
export TERM="$([ -n "$TMUX" ] && echo 'screen-256color' || echo 'xterm-256color')" # set 256 color terminal
export PRINTER="$([ $HOSTNAME == "silveru" ] && echo "lacertian";)"
export STDERR_COLOR="\033[31m"          # make stderr output red
export HISTTIMEFORMAT="[%Y-%m-%d %T] "  # timestamp history commands
export HISTCONTROL="ignoredups"         # dont record duplicate commands
export HISTIGNORE="&:ls:cd:[bf]g:exit"  # dont record simple commands like ls
export CORES=$(grep -c ^processor /proc/cpuinfo)
if [[ -n $CORES ]] && [ $CORES -gt 1 ]; then
    export MAKEFLAGS="-j$CORES"             # gnu make run parallel
fi
export TERM=$(if [[ $HOSTNAME = node* ]] || [[ $HOSTNAME = silver ]]; then
    echo xterm; else if [ -n "$TMUX" ]; then
    echo 'screen-256color'; else
    echo 'xterm-256color'; fi; fi)

if [ -x /usr/bin/dircolors ]; then
    test -r $HOME/.lsrc && eval "$(dircolors --sh "$HOME/.lsrc")"
fi

ulimit -c unlimited

# -----------------------------------------------------------------------------
# Aliases
# -----------------------------------------------------------------------------

alias cp="rsync -ahv"
alias cp%="rsync -ahv --progress"
alias h='history'
alias lt='/bin/ls --color=auto -lht'
alias ltf='lt --color=always -lht | grep --color=never "^-"'
alias ltd='lt --color=always -lht | grep --color=never "^d"'
alias grep='grep --line-number --color=auto'
alias lpr='lpr -o sides=two-sided-long-edge -o number-up=2'
alias cugdb='cgdb -d cuda-gdb'
alias nettop='sudo nethogs'
alias tmux='tmux -2 -u'                        # force 256 colors AND UTF-8
alias ssh='ssh -Y -o StrictHostKeyChecking=no' # to enable xclip on remote system
alias sshnokey='ssh -Y -o PreferredAuthentications=password -o PubkeyAuthentication=no'
alias ..='popd &>/dev/null'
alias vim='vim -O'
alias unspoof='spoof x'
alias cpu='ps -e -o pcpu:6,psr:6,cpu:6,nice:6,cputime:12,user:8,args --sort pcpu | sed "/^   0.0 /d"'
alias vgdb='valgrind --vgdb=yes --vgdb-error=0 --leak-check=full --show-reachable=yes --track-origins=yes --num-callers=20 --track-fds=yes'
alias gdb='gdb -q'
alias ls='ls --color=auto -v -h --group-directories-first'
alias evince='env -i DISPLAY=$DISPLAY evince'
alias lock='lxlock' # sudo apt-get install lxsession
alias callgrind='valgrind --tool=callgrind'
alias profgrind='valgrind --tool=kcachegrind'
alias blank='sleep 1; xset dpms force off'
alias swapalt='setxkbmap -option; setxkbmap -layout us; setxkbmap -option altwin:ctrl_win;'
alias swapcaps='setxkbmap -option; setxkbmap -layout us; setxkbmap -option ctrl:swapcaps'
alias cmake="cmake -D MAKE_C_COMPILER=$GCCL/bin/gcc -D CMAKE_CXX_COMPILER=$GCCL/bin/g++ -D CMAKE_INSTALL_PREFIX=$PRG"
alias cc='clang'
alias k='fc -s'

[ -n "$(which htop 2>/dev/null)" ] && alias top='(TERM=xterm-256color; htop)'
[ "$XDG_CURRENT_DESKTOP" == "GNOME" ] && alias open='gnome-open 2>/dev/null';

